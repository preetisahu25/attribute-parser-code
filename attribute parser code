#include <bits/stdc++.h>
using namespace std;

int main() {
    int n, q;
    cin >> n >> q;
    cin.ignore();

    map<string, string> attributeMap;
    string line, tag = "";

    for (int i = 0; i < n; i++) {
        getline(cin, line);

        line.erase(remove(line.begin(), line.end(), '<'), line.end());
        line.erase(remove(line.begin(), line.end(), '>'), line.end());

        stringstream ss(line);
        string word;
        ss >> word;

        if (word[0] == '/') {
            tag = tag.substr(0, tag.find_last_of('.'));
        } else {
            if (!tag.empty())
                tag += "." + word;
            else
                tag = word;

            string attrName, equalSign, attrValue;
            while (ss >> attrName >> equalSign >> attrValue) {
                attrValue = attrValue.substr(1, attrValue.length() - 2);
                attributeMap[tag + "~" + attrName] = attrValue;
            }
        }
    }

    for (int i = 0; i < q; i++) {
        string query;
        getline(cin, query);
        if (attributeMap.find(query) != attributeMap.end())
            cout << attributeMap[query] << endl;
        else
            cout << "Not Found!" << endl;
    }

    return 0;
}
